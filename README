# coldcan #

A deadly simple, not production ready, clone of Hotjar.

## Introduction ##

This project was born as a game: I tried to emulate a well known SaaS
with very simple technologies and in a small amount of time. 

This is not meant to be used in production for:

 - it can only save correctly one session per time;

 - it expose publicly all the videos;

 - it lacks any form of authentication;

 - it may not work on complicated sites;

 - on every configuration change you have to rebuild and clients won't be aware of changes;

Again, please don't take this too seriously.

## What it's supposed to do ##

This should record a configurable-amount-of-time long video of the page. 
Actually the videos will look more like a slideshow since they will be at 
most at 1fps. I'll probably move from videoshow to fluent-ffmpeg to achieve
better results.

## Building ##

Set configuration options in `configuration.json` file and run `npm build`.

## Configuring ##

### server ###
URL of the recording server

### length ###
Video length in seconds

## Usage ## 

### Client Side ###

Include the `client/coldcan-client.js` script in the page you want to record.
This will start recording as soon as the socket.io connection is established.
The video processing will start when the socket.io connection is interrupted 
(you close the browser, refresh the page and so on).

### Server Side ###

Since you need to install `ffmpeg` in order to make this work, I strongly suggest 
to use Docker.

Navigate to where you cloned the repo and then

    docker build -t coldcan .
    docker run -p 80:3000 coldcan

Et voila! The application is now running on port 80.

I'll probably create a docker registry version of this, so you won't need to do 
these last operations on your machine.

## Contributing ##

Fork this repo, edit code and make pull requests.

I included an `npm run lint` script, so I'd like to receive pull requests already
linted. 



### IDEAS ###
- Use fluent ffmpeg
- Make the client download the configuration from the server